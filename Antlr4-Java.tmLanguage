<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>g4</string>
	</array>
	<key>firstLineMatch</key>
	<string>.*\bgrammar\b.*;</string>
	<key>name</key>
	<string>Antlr4</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>comment</key>
			<string>Global Action Section</string>
			<key>begin</key>
			<string>^\s*(@[a-z]\w+)\s*{</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.antlr</string>
				</dict>
			</dict>
			<key>end</key>
			<string>}</string>
			<key>name</key>
			<string>source.java.embedded.antlr</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.java</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>comment</key>
			<string>Lexer Rules</string>
			<key>begin</key>
			<string>^\s*(fragment)?\s*([A-Z]\w+)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.antlr</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.var.antlr</string>
				</dict>
			</dict>
			<key>end</key>
			<string>;</string>
			<key>name</key>
			<string>meta.rule.lexer.antlr</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#rule</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#rule-lexer</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>comment</key>
			<string>Parser Rules</string>
			<key>begin</key>
			<string>^\s*([a-z]\w+)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.antlr</string>
				</dict>
			</dict>
			<key>end</key>
			<string>;</string>
			<key>name</key>
			<string>meta.rule.parser.antlr</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#rule</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#rule-parser</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(grammar|options|tokens|lexer grammar|parser grammar|throws|catch|finally|mode)\b</string>
			<key>name</key>
			<string>keyword.other.antlr</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>rule</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(returns|locals)\s*\[</string>
					<key>end</key>
					<string>\]</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.antlr</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.action</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.java</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(@init|@after)\s*\{</string>
					<key>end</key>
					<string>}</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.antlr</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.action</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.java</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#embedded</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>end</key>
					<string>'</string>
					<key>name</key>
					<string>string.quoted.single</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#escape-pattern</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>rule-lexer</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(->)\s*(channel)\((\s*HIDDEN\s*|.*)\)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.antlr</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.antlr</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.constant.antlr</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>#escape-pattern</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[\.\?\+\*\[\]\~\|]</string>
					<key>name</key>
					<string>keyword.operator</string>
				</dict>
			</array>
		</dict>
		<key>rule-parser</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>[\?\+\*\|]</string>
					<key>name</key>
					<string>keyword.operator.antlr</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(\w+)(=)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.var.antlr</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.antlr</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[a-z]\w+\b</string>
					<key>name</key>
					<string>storage.type.function.antlr</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[A-Z]\w+\b</string>
					<key>name</key>
					<string>constant.other.antlr</string>
				</dict>
			</array>
		</dict>
		<key>escape-pattern</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(u[0-9A-F]{4}|.)</string>
					<key>name</key>
					<string>constant.character.escape.antlr</string>
				</dict>
			</array>
		</dict>
		<key>embedded</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>end</key>
					<string>}</string>
					<key>name</key>
					<string>source.java.embedded.antlr</string>
					<key>patterns</key>
					<array>
						<!--<dict>
							<key>match</key>
							<string>(\$)</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.antlr</string>
								</dict>
							</dict>
						</dict>-->
						<dict>
							<key>include</key>
							<string>source.java</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=/\*)</string>
					<key>end</key>
					<string>(?&lt;=\*/)</string>
					<key>name</key>
					<string>comment.block.antlr</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=//)</string>
					<key>end</key>
					<string>(?&lt;=\n)</string>
					<key>name</key>
					<string>comment.block.antlr</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.antlr</string>
	<key>uuid</key>
	<string>95178c9c-39f8-4905-90c9-3941377c9d74</string>
</dict>
</plist>
